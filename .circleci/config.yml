version: 2.1

# Define reusable executor
executors:
  java-executor:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: "-Xmx3200m"  # Optimize Maven memory

# Define reusable commands
commands:
  build_and_test:
    description: "Build, test, and cache a microservice"
    parameters:
      service_name:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-{{ checksum "<< parameters.service_name >>/pom.xml" }}-{{ .Branch }}
            - maven-{{ checksum "<< parameters.service_name >>/pom.xml" }}-
      - run:
          name: "Build and Test << parameters.service_name >>"
          command: |
            cd << parameters.service_name >>
            mvn clean install -DskipTests=false
      - save_cache:
          paths:
            - ~/.m2
          key: maven-{{ checksum "<< parameters.service_name >>/pom.xml" }}-{{ .Branch }}
      - store_test_results:
          path: << parameters.service_name >>/target/surefire-reports

  build_docker:
    description: "Build and push Docker image"
    parameters:
      service_name:
        type: string
    steps:
      - setup_remote_docker:
          version: default  # Stable version for production
      - run:
          name: "Build and Push Docker Image for << parameters.service_name >>"
          command: |
            cd << parameters.service_name >>
            IMAGE_NAME=$(echo "<< parameters.service_name >>" | tr '[:upper:]' '[:lower:]')
            docker build -t ashishgzpy/${IMAGE_NAME}:${CIRCLE_SHA1} -t ashishgzpy/${IMAGE_NAME}:latest .
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push ashishgzpy/${IMAGE_NAME}:${CIRCLE_SHA1}
            docker push ashishgzpy/${IMAGE_NAME}:latest

# Define jobs
jobs:
  build-and-push:
    executor: java-executor
    parameters:
      service_name:
        type: string
    steps:
      - build_and_test:
          service_name: << parameters.service_name >>
      - build_docker:
          service_name: << parameters.service_name >>

# Workflow
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-push:
          matrix:
            parameters:
              service_name:
                - "ApiGateway"
                - "AuthService"
                - "CartService"
                - "InventoryService"
                - "OrderService"
                - "PaymentService"
                - "ProductService"
                - "ServiceRegistry"
          filters:
            branches:
              only: main  # Run only on main branch
