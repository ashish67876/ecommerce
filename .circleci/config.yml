version: 2.1

# Use the SonarCloud orb to simplify analysis integration.
orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:19.0.1
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Delete Test Directories
          command: |
            echo "Deleting test directories..."
            rm -rf ApiGateway/src/test
            rm -rf AuthService/src/test
            rm -rf CartService/src/test
            rm -rf InventoryService/src/test
            rm -rf OrderService/src/test
            rm -rf PaymentService/src/test
            rm -rf ProductService/src/test
            rm -rf ServiceRegistry/src/test
            echo "Test directories deleted successfully."

      # Build and test each microservice sequentially.
      - run:
          name: Build & Package ApiGateway
          command: |
            cd ApiGateway && mvn -B -DskipTests clean package
      - run:
          name: Test ApiGateway
          command: |
            cd ApiGateway && mvn test

      - run:
          name: Build & Package AuthService
          command: |
            cd AuthService && mvn -B -DskipTests clean package
      - run:
          name: Test AuthService
          command: |
            cd AuthService && mvn test

      - run:
          name: Build & Package CartService
          command: |
            cd CartService && mvn -B -DskipTests clean package
      - run:
          name: Test CartService
          command: |
            cd CartService && mvn test

      - run:
          name: Build & Package InventoryService
          command: |
            cd InventoryService && mvn -B -DskipTests clean package
      - run:
          name: Test InventoryService
          command: |
            cd InventoryService && mvn test

      - run:
          name: Build & Package OrderService
          command: |
            cd OrderService && mvn -B -DskipTests clean package
      - run:
          name: Test OrderService
          command: |
            cd OrderService && mvn test

      - run:
          name: Build & Package PaymentService
          command: |
            cd PaymentService && mvn -B -DskipTests clean package
      - run:
          name: Test PaymentService
          command: |
            cd PaymentService && mvn test

      - run:
          name: Build & Package ProductService
          command: |
            cd ProductService && mvn -B -DskipTests clean package
      - run:
          name: Test ProductService
          command: |
            cd ProductService && mvn test

      - run:
          name: Build & Package ServiceRegistry
          command: |
            cd ServiceRegistry && mvn -B -DskipTests clean package
      - run:
          name: Test ServiceRegistry
          command: |
            cd ServiceRegistry && mvn test

      # Persist the build artifacts (target folders) for downstream jobs.
      - persist_to_workspace:
          root: .
          paths:
            - ApiGateway/target
            - AuthService/target
            - CartService/target
            - InventoryService/target
            - OrderService/target
            - PaymentService/target
            - ProductService/target
            - ServiceRegistry/target

  sonarcloud-analysis:
    docker:
      - image: cimg/openjdk:17.0.1
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      # Run SonarCloud analysis using the orb.
      # (This example analyzes the ApiGateway microservice; you can parameterize this for other services.)
      - sonarcloud/scan:
          project_base_dir: ApiGateway
          sonar_project_key: $SONAR_PROJECT_KEY
          sonar_project_name: $SONAR_PROJECT_NAME
          sonar_organization: $SONAR_ORGANIZATION

  jfrog-upload:
    docker:
      - image: cimg/openjdk:19.0.1
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install JFrog CLI
          command: |
            echo "Installing JFrog CLI..."
            curl -fL https://getcli.jfrog.io | sh
            chmod +x jfrog
            sudo mv jfrog /usr/local/bin/
      - run:
          name: Upload Artifacts to JFrog Artifactory
          command: |
            echo "Configuring JFrog CLI..."
            jfrog rt config --url=${JFROG_URL} --user=${JFROG_USER} --password=${JFROG_PASSWORD} --interactive=false
            echo "Uploading artifacts..."
            jfrog rt upload "ApiGateway/target/*.jar" "my-repo/ApiGateway/"
            jfrog rt upload "AuthService/target/*.jar" "my-repo/AuthService/"
            jfrog rt upload "CartService/target/*.jar" "my-repo/CartService/"
            jfrog rt upload "InventoryService/target/*.jar" "my-repo/InventoryService/"
            jfrog rt upload "OrderService/target/*.jar" "my-repo/OrderService/"
            jfrog rt upload "PaymentService/target/*.jar" "my-repo/PaymentService/"
            jfrog rt upload "ProductService/target/*.jar" "my-repo/ProductService/"
            jfrog rt upload "ServiceRegistry/target/*.jar" "my-repo/ServiceRegistry/"
            echo "Artifacts uploaded successfully."

workflows:
  version: 2
  build_test_sonar_jfrog:
    jobs:
      - build-and-test
      - sonarcloud-analysis:
          requires:
            - build-and-test
      - jfrog-upload:
          requires:
            - build-and-test
