version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0

executors:
  custom-executor:
    docker:
      - image: dockette/mvn:latest
    working_directory: ~/repo

commands:
  build_and_test_service:
    parameters:
      service_name:
        type: string
    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-deps-{{ checksum "<< parameters.service_name >>/pom.xml" }}
            - maven-deps-
      - run:
          name: Build & Test << parameters.service_name >>
          command: |
            cd << parameters.service_name >>
            mvn clean package
      - save_cache:
          key: maven-deps-{{ checksum "<< parameters.service_name >>/pom.xml" }}
          paths:
            - ~/.m2
      - persist_to_workspace:
          root: .
          paths:
            - << parameters.service_name >>/target

jobs:
  build-and-test-ApiGateway:
    executor: custom-executor
    steps:
      - build_and_test_service:
          service_name: ApiGateway

  sonar-analysis-ApiGateway:
    executor: custom-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      # Optionally confirm artifacts exist or do any additional step
      - run:
          name: List build artifacts
          command: ls -l ApiGateway/target
      - sonarcloud/scan:
          directory: "ApiGateway"
          extra_properties: |
            sonar.projectKey=ApiGateway-key
            sonar.projectName=ApiGateway
            sonar.organization=YOUR_SONARCLOUD_ORG
            sonar.sources=src
            sonar.java.binaries=target/classes

  jfrog-upload:
    executor: custom-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install JFrog CLI
          command: |
            echo "Installing JFrog CLI..."
            curl -fL https://getcli.jfrog.io | sh
            chmod +x jfrog
            sudo mv jfrog /usr/local/bin/
      - run:
          name: Configure & Upload
          command: |
            jfrog rt config --url="${JFROG_URL}" --user="${JFROG_USER}" --password="${JFROG_PASSWORD}" --interactive=false
            jfrog rt upload "ApiGateway/target/*.jar" "my-repo/ApiGateway/"
            echo "All artifacts uploaded successfully."

workflows:
  version: 2
  build_test_sonar_jfrog:
    jobs:
      - build-and-test-ApiGateway
      - sonar-analysis-ApiGateway:
          requires:
            - build-and-test-ApiGateway
      - jfrog-upload:
          requires:
            - sonar-analysis-ApiGateway
